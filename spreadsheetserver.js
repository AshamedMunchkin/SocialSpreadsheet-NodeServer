// Generated by CoffeeScript 1.6.2
var SpreadsheetServer;

SpreadsheetServer = (function() {
  function SpreadsheetServer(port) {
    var net, server;

    net = require('net');
    server = net.createServer();
    server.listen(port);
  }

  SpreadsheetServer.prototype.create = function(connection, filename, password) {
    if (this.spreadsheetDatabase.doesSpreadsheetExist(filename) === true) {
      connection.write("CREATE FAIL\nName:" + filename + "\nThe spreadsheet already exists.\n");
      return;
    }
    this.spreadsheetDatabase.createSpreadsheet(filename, password);
    return connection.write("CREATE OK\nName:" + filename + "\nPassword:" + password + "\n");
  };

  SpreadsheetServer.prototype.join = function(connection, filename, password) {
    var version, xml, _base, _ref;

    if (this.spreadsheetDatabase.doesSpreadsheetExist(filename) === false) {
      connection.write("JOIN FAIL\nName:" + filename + "\nSpreadsheet does not exist.\n");
      return;
    }
    if (password !== this.spreadsheetDatabase.getSpreadsheetPassword(filename)) {
      connection.write("JOIN FAIL\nName:" + filename + "\nIncorrect password.\n");
      return;
    }
    xml = this.spreadsheetDatabase.getSpreadsheetXml(filename);
    version = this.getVersion(filename);
    connection.write("JOIN OK\nName:" + filename + "\nVersion:" + version + "\nLength:" + xml.length + "\n" + xml + "\n");
    if ((_ref = (_base = this.editSessions)[filename]) == null) {
      _base[filename] = {
        version: 0,
        dones: [],
        clients: []
      };
    }
    return this.editSessions[filename].clients.push(connection);
  };

  SpreadsheetServer.prototype.change = function(connection, filename, version, cell, contents) {
    var peer, updateMessage, _i, _len, _ref,
      _this = this;

    if (checkName(conneciton, filename) === false) {
      connection.write("CHANGE FAIL\nName:" + filename + "\nYou are not connected to that spreadsheet.\n");
      return;
    }
    if (version !== this.getVersion(filename)) {
      connection.write("CHANGE WAIT\nName:" + filename + "\nVersion:" + this.editSessions[filename].version + "\n");
      return;
    }
    this.spreadsheetDatabase.changeCell(filename, contents, function(done) {
      return _this.editSessions[filename].dones.push(done);
    });
    connection.write("CHANGE OK\nName:" + filename + "\nVersion:" + (version = ++this.editSessions[filename].version) + "\n");
    updateMessage = "UPDATE\nName:" + filename + "\nVersion:" + version + "\nCell:" + cell + "\nLength:" + length + "\n" + contents + "\n";
    _ref = this.editSessions[filename].clients;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      peer = _ref[_i];
      if (peer !== connection) {
        peer.write(updateMessage);
      }
    }
    return {
      undo: function(connection, filename, version) {}
    };
  };

  return SpreadsheetServer;

})();

module.exports = SpreadsheetServer;
